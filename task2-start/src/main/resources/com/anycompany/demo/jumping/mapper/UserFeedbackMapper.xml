<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anycompany.demo.jumping.mapper.UserFeedbackMapper">
    
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.anycompany.demo.jumping.model.UserFeedback">
        <id column="id" property="id" />
        <result column="category_id" property="categoryId" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="email" property="email" />
        <result column="status" property="status" />
        <result column="user_id" property="userId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <!-- 公共列 -->
    <sql id="Base_Column_List">
        id, category_id, title, content, email, status, user_id, create_time, update_time
    </sql>
    
    <!-- 根据ID查询用户反馈表 -->
    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        WHERE id = #{id}
    </select>
    
    <!-- 根据类别ID查询用户反馈表 -->
    <select id="getByCategoryId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        WHERE category_id = #{categoryId}
        LIMIT 1
    </select>
    
    <!-- 根据联系邮箱查询用户反馈表 -->
    <select id="getByEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        WHERE email = #{email}
        LIMIT 1
    </select>
    
    <!-- 根据状态(0:未处理 1:已处理)查询用户反馈表 -->
    <select id="getByStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        WHERE status = #{status}
        LIMIT 1
    </select>
    
    <!-- 根据用户ID(可选)查询用户反馈表 -->
    <select id="getByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        WHERE user_id = #{userId}
        LIMIT 1
    </select>
    
    <!-- 查询所有用户反馈表 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        ORDER BY id ASC
    </select>
    
    <!-- 条件查询用户反馈表列表 -->
    <select id="findList" parameterType="com.anycompany.demo.jumping.model.UserFeedback" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        <where>
            <if test="categoryId != null">
                AND category_id = #{categoryId}
            </if>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="content != null and content != ''">
                AND content LIKE CONCAT('%', #{content}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
        ORDER BY id ASC
    </select>
    
    <!-- 分页查询用户反馈表列表 -->
    <select id="findListWithPagination" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM demo_user_feedback
        <where>
            <if test="userFeedback.categoryId != null">
                AND category_id = #{userFeedback.categoryId}
            </if>
            <if test="userFeedback.title != null and userFeedback.title != ''">
                AND title LIKE CONCAT('%', #{userFeedback.title}, '%')
            </if>
            <if test="userFeedback.content != null and userFeedback.content != ''">
                AND content LIKE CONCAT('%', #{userFeedback.content}, '%')
            </if>
            <if test="userFeedback.email != null and userFeedback.email != ''">
                AND email LIKE CONCAT('%', #{userFeedback.email}, '%')
            </if>
            <if test="userFeedback.status != null">
                AND status = #{userFeedback.status}
            </if>
            <if test="userFeedback.userId != null">
                AND user_id = #{userFeedback.userId}
            </if>
        </where>
        ORDER BY id ASC
        LIMIT #{offset}, #{limit}
    </select>
    
    <!-- 插入用户反馈表 -->
    <insert id="insert" parameterType="com.anycompany.demo.jumping.model.UserFeedback" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO demo_user_feedback (
            category_id, title, content, email, status, user_id, create_time, update_time
        ) VALUES (
            #{categoryId}, #{title}, #{content}, #{email}, #{status}, #{userId}, NOW(), NOW()
        )
    </insert>
    
    <!-- 更新用户反馈表 -->
    <update id="update" parameterType="com.anycompany.demo.jumping.model.UserFeedback">
        UPDATE demo_user_feedback
        <set>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null">status = #{status},</if>
            <if test="userId != null">user_id = #{userId},</if>
            update_time = NOW()

        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 更新用户反馈表状态 -->
    <update id="updateStatus">
        UPDATE demo_user_feedback
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <!-- 删除用户反馈表 -->
    <delete id="deleteById">
        DELETE FROM demo_user_feedback
        WHERE id = #{id}
    </delete>
    
    <!-- 批量删除用户反馈表 -->
    <delete id="batchDelete">
        DELETE FROM demo_user_feedback
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
